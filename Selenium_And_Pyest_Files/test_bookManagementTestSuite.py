# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestBookManagementTestSuite():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_test1InvalidUserName(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1680, 940)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("asdf")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("asdf")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".alert").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert").text == "Invalid username or password"
  
  def test_test2AccessBooksWithoutLogin(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.LINK_TEXT, "Books").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-md-6").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert").text == "Please login for Access!!"
  
  def test_test3ValidLogin(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("testuser")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".alert-info").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert-info").text == "Hi testuser!"
  
  def test_test4AddBook(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("testuser")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("test")
    self.driver.find_element(By.ID, "isbn10").click()
    self.driver.find_element(By.ID, "isbn10").send_keys("123")
    self.driver.find_element(By.ID, "isbn13").click()
    self.driver.find_element(By.ID, "isbn13").send_keys("123")
    self.driver.find_element(By.ID, "copyrightYear").click()
    self.driver.find_element(By.ID, "copyrightYear").send_keys("1234")
    self.driver.find_element(By.ID, "subcategoryID").click()
    self.driver.find_element(By.ID, "subcategoryID").send_keys("123")
    self.driver.find_element(By.ID, "imprintID").click()
    self.driver.find_element(By.ID, "imprintID").send_keys("123")
    self.driver.find_element(By.ID, "productionStatusID").click()
    self.driver.find_element(By.ID, "productionStatusID").send_keys("123")
    self.driver.find_element(By.ID, "bindingTypeID").click()
    self.driver.find_element(By.ID, "bindingTypeID").send_keys("123")
    self.driver.find_element(By.ID, "trimSize").click()
    self.driver.find_element(By.ID, "trimSize").send_keys("123")
    self.driver.find_element(By.ID, "pageCountsEditorialEst").click()
    self.driver.find_element(By.ID, "pageCountsEditorialEst").send_keys("123")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("123")
    self.driver.find_element(By.ID, "coverImage").click()
    self.driver.find_element(By.ID, "coverImage").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".alert-info").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert-info").text == "Book added successfully!"
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(222) > td:nth-child(2)").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(222) > td:nth-child(2)").text == "test"
  
  def test_test5DeleteBook(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("testuser")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("asd")
    self.driver.find_element(By.ID, "isbn10").click()
    self.driver.find_element(By.ID, "isbn10").send_keys("asd")
    self.driver.find_element(By.ID, "isbn13").click()
    self.driver.find_element(By.ID, "isbn13").send_keys("asd")
    self.driver.find_element(By.ID, "copyrightYear").click()
    self.driver.find_element(By.ID, "copyrightYear").send_keys("asd")
    self.driver.find_element(By.ID, "subcategoryID").click()
    self.driver.find_element(By.ID, "subcategoryID").send_keys("asd")
    self.driver.find_element(By.ID, "imprintID").click()
    self.driver.find_element(By.ID, "imprintID").send_keys("123")
    self.driver.find_element(By.ID, "productionStatusID").click()
    self.driver.find_element(By.ID, "productionStatusID").send_keys("123")
    self.driver.find_element(By.ID, "bindingTypeID").click()
    self.driver.find_element(By.ID, "bindingTypeID").send_keys("123")
    self.driver.find_element(By.ID, "trimSize").click()
    self.driver.find_element(By.ID, "trimSize").send_keys("123")
    self.driver.find_element(By.ID, "pageCountsEditorialEst").click()
    self.driver.find_element(By.ID, "pageCountsEditorialEst").send_keys("123")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("123")
    self.driver.find_element(By.ID, "coverImage").click()
    self.driver.find_element(By.ID, "coverImage").send_keys("1")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(223) > td:nth-child(1)").click()
    self.driver.find_element(By.ID, "delete_id").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(223) > td:nth-child(1)").send_keys("989")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-danger").click()
    self.driver.find_element(By.CSS_SELECTOR, ".container").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(223) > td:nth-child(1)").text == "Book deleted successfully!"
  
  def test_test6DeleteBookWhenBookDoesNotExist(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("testuser")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.ID, "delete_id").click()
    self.driver.find_element(By.ID, "delete_id").send_keys("987")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-danger").click()
    self.driver.find_element(By.CSS_SELECTOR, ".alert-info").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert-info").text == "Book does not exist!"
  
  def test_test7Logout(self):
    self.driver.get("http://localhost/RJ_BMS/php/login.php")
    self.driver.set_window_size(1920, 970)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("testuser")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
    self.driver.find_element(By.CSS_SELECTOR, ".card-title").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".card-title").text == "Login"
  
